name: Post Modernization Checks

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

permissions:
  contents: write

jobs:
  build:
    if: startsWith(github.head_ref, 'Q-TRANSFORM-issue-')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build with Maven
        run: mvn clean install -DskipTests 2>&1 | tee build.log

      - name: Upload Build Log
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log

  test:
    if: startsWith(github.head_ref, 'Q-TRANSFORM-issue-')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn test 2>&1 | tee test.log
      - uses: actions/upload-artifact@v4
        with:
          name: test-log
          path: test.log

  lint:
    if: startsWith(github.head_ref, 'Q-TRANSFORM-issue-')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn checkstyle:checkstyle 2>&1 | tee lint.log
      - uses: actions/upload-artifact@v4
        with:
          name: lint-log
          path: lint.log

  security:
    if: startsWith(github.head_ref, 'Q-TRANSFORM-issue-')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run OWASP Dependency-Check
        run: |
          curl -L -o dc.zip https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip
          unzip -q dc.zip -d dc
          chmod +x dc/dependency-check/bin/dependency-check.sh
          dc/dependency-check/bin/dependency-check.sh --project mini-spring --scan . --format ALL --out security-report 2>&1 | tee security.log
      - uses: actions/upload-artifact@v4
        with:
          name: security-log
          path: security.log

  report:
    if: startsWith(github.head_ref, 'Q-TRANSFORM-issue-') || always()
    runs-on: ubuntu-latest
    needs: [build, test, lint, security]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download All Logs
        uses: actions/download-artifact@v4
        with:
          path: logs

      - name: Generate Markdown Report
        run: |
          mkdir -p reports
          REPORT=reports/post-modernization.md
          echo "# 🛠️ Post-Modernization Report" > $REPORT
          echo "_Generated on $(date)_\n" >> $REPORT

          for job in build test lint security; do
            LOGFILE="logs/${job}-log/${job}.log"
            echo "## ✅ ${job^} Log" >> $REPORT
            echo '```' >> $REPORT
            if [[ -f "$LOGFILE" ]]; then
              tail -n 50 "$LOGFILE" >> $REPORT
            else
              echo "⚠️ Log not found. Job may not have executed or artifact was missing." >> $REPORT
            fi
            echo '```' >> $REPORT
            echo >> $REPORT
          done

      - name: Commit and Push Report
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add reports/post-modernization.md
          git commit -m "📄 Add post-modernization report with logs [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
